// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"
	domain "serverfn/internal/domain"

	gomock "github.com/golang/mock/gomock"
)

// MockRepositories is a mock of Repositories interface.
type MockRepositories struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoriesMockRecorder
}

// MockRepositoriesMockRecorder is the mock recorder for MockRepositories.
type MockRepositoriesMockRecorder struct {
	mock *MockRepositories
}

// NewMockRepositories creates a new mock instance.
func NewMockRepositories(ctrl *gomock.Controller) *MockRepositories {
	mock := &MockRepositories{ctrl: ctrl}
	mock.recorder = &MockRepositoriesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepositories) EXPECT() *MockRepositoriesMockRecorder {
	return m.recorder
}

// GetTaskRepository mocks base method.
func (m *MockRepositories) GetTaskRepository() domain.TaskRepository {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTaskRepository")
	ret0, _ := ret[0].(domain.TaskRepository)
	return ret0
}

// GetTaskRepository indicates an expected call of GetTaskRepository.
func (mr *MockRepositoriesMockRecorder) GetTaskRepository() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTaskRepository", reflect.TypeOf((*MockRepositories)(nil).GetTaskRepository))
}
